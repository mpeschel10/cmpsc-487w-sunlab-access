Done:

Next:
hook php "event happened" endpoint up to sql
    add php params/whatever for user ID and local timestamp
    should return true or false based on whether 
    basic auth
php endpoint for administrator search
    probably format sql stuff as json
php endpoint for administrator updates
sql
    script for cleaning what we've done (deleting tables mostly)
    script for creating the tables
    script for creating a few test records

Later:
administrator web page can search
administrator app can do users etc.
sql job to delete old records
authentication someh
separate login page
local client for the card swipe thingy
php support for basic auth instead of nginx
what other kinds of auth are there? digest? token? implement something nicer
what kinds of password hashing do php and nginx support?
    good procedure? what is state of art
        how does twitter google facebook do it?
move to public server on digitalocean
https

Maybe:
make swipe.php named just swipe
systemd timer to delete old records
sanity checking for "local time" of swipe records if reported time is like, actually close to server time or if we're getting 3-month old spoofed records or what

Server notes:
* pacman -S nginx
* systemctl start nginx
# Edit /etc/nginx.conf location block to point to this dir/the other thing
nginx -t
nginx -s reload
* pacman -S php-fpm
* systemctl start php-fpm.service
# Edit /etc/nginx.conf location block to fastcgi_pass unix:/run/php-fpm/php-fpm.sock;
* pacman -S mariadb
# Security recommends on https://wiki.archlinux.org/title/MariaDB
* mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
* systemctl start mariadb
* mariadb
CREATE DATABASE sweng;
USE sweng;
SHOW DATABASES;
system pwd;
source database.sql;
\. database.sql;
CREATE USER AzureDiamond@localhost IDENTIFIED BY "hunter2";
SELECT user FROM mysql.user;
GRANT ALL PRIVILEGES ON sweng.* TO AzureDiamond@localhost;
FLUSH PRIVILEGES;
SHOW GRANTS FOR AzureDiamond@localhost;

# HTTP basic auth
location = /status.txt {
    auth_basic "learning";
    auth_basic_user_file /etc/nginx/.htpasswd;
}
# auth_basic's argument is the "Realm" which is a tag for the set of resources that all use the same keys
sudo htpasswd -c /etc/nginx/.htpasswd AzureDiamond
# type hunter2
sudo htpasswd /etc/nginx/.htpasswd NextUser


functional requirements:
    records older than 5 years must be deleted in a timely manner (probably once per day)
    searchable history of sunlab access.
        search by date, student id, and time range.
        must have GUI.
    must support multiple types of users.
    admin type users must be able to activate, suspend, and reactivate accounts by ID

non-functional requirements:
    use php, mysql/mariadb on centos on digital ocean for backend
    host on local network to begin with
    host on mpeschel10.com for final demo
    
    two tables: access and users
    access has attributes ID, in/out, timestamp
    users has attributes ID, name, user_type, is_active
    
    one of those SQL functions to delete all records older than 5 years
    script on systemd timer that deletes records older than 5 years
    
    test script to insert a bunch of junk historical records


    html/css/js page for administrator front-end. No framework for now.
    probably python on systemd timer for card reader front-end? Not necessary until 

Assumptions:
    two separate clients:
        one to read from card swipe and send data to https endpoint
        one to read and display history of thing from web server

